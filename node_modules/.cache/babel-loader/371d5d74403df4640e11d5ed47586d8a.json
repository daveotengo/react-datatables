{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/react-datatables/src/App.js\";\nimport React from 'react';\nimport './App.css'; //import DataTable from './DataTable'\n\nimport data from './data';\nimport Datalist from './Datalist';\nimport Select from 'react-select';\nimport axios from 'axios';\nexport default class App extends React.Component {\n  componentDidMount() {\n    console.log(\"component did mount\");\n    this.getOptions();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeSearch = e => {\n      const value = e.target.value;\n      const searchValue = value;\n      this.setState({\n        searchValue\n      });\n      this.dataTableRef.current.search(searchValue);\n    };\n\n    this.state = {\n      columns: [//   { title: \"name\", data: \"name\" },\n      //   { title: \"position\", data: \"position\" },\n      //   { title: \"salary\", data: \"salary\" },\n      //   { title: \"start_date\", data: \"start_date\" },\n      //   { title: \"office\", data: \"office\" },\n      //   { title: \"extn\", data: \"extn\" }\n      {\n        title: \"userId\",\n        data: \"userId\"\n      }, {\n        title: \"id\",\n        data: \"id\"\n      }, {\n        title: \"title\",\n        data: \"title\"\n      }, {\n        title: \"completed\",\n        data: \"completed\"\n      }],\n      searchValue: '',\n      options: {\n        dom: 'lBfrtip',\n        buttons: ['copy', 'csv', 'excel', 'pdf', 'print'],\n        stripeClasses: ['stripe1', 'stripe2'],\n        orderClasses: false // paging: false,\n        // scrollX: true,\n        // scrollY: '100%',\n        // scrollCollapse: false,\n        // autoWidth: false,\n        // info: false,\n\n      },\n      selectOptions: [],\n      id: \"\",\n      name: '',\n      criteria: '' //selected:false,\n\n    };\n    this.dataTableRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async getOptions() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/todos');\n    const data = res.data;\n    const options = data.map(d => ({\n      \"value\": d.id,\n      \"label\": d.title\n    }));\n    this.setState({\n      selectOptions: options\n    });\n  }\n\n  handleChange(selectedOption) {\n    console.log(\"press\");\n    console.log(selectedOption);\n    console.log(selectedOption.value); //this.setState({clicked:true})\n    //this.setState({selectedVal:selectedOption.value})\n    //this.setState({criteria: selectedOption});\n\n    this.getOptionById(selectedOption.value);\n  }\n\n  async getOptionById(id) {\n    console.log(id);\n    const res = await axios.get('https://jsonplaceholder.typicode.com/todos/' + id);\n    const data = res.data; // const options = data.map(d => ({\n    //   \"value\" : d.id,\n    //   \"label\" : d.title\n    // }))\n\n    console.log(data.id);\n    console.log(data.title); //this.setState({selectOptions: options})\n  } //   handleChange(selectedOption) {\n  //       console.log(\"press\");\n  //       console.log(selectedOption)\n  //     this.setState({criteria: selectedOption});\n  //   }\n\n\n  render() {\n    // if(this.state.selected==true){\n    //     const val =this.state.selectedVal\n    //     this.getOptionById(val);\n    // }\n    const _this$state = this.state,\n          columns = _this$state.columns,\n          options = _this$state.options,\n          searchValue = _this$state.searchValue;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: this.state.selectOptions,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Datalist, {\n      dataTableRef: this.dataTableRef,\n      data: data,\n      columns: columns,\n      options: options,\n      value: searchValue,\n      onChange: this.onChangeSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/react-datatables/src/App.js"],"names":["React","data","Datalist","Select","axios","App","Component","componentDidMount","console","log","getOptions","constructor","props","onChangeSearch","e","value","target","searchValue","setState","dataTableRef","current","search","state","columns","title","options","dom","buttons","stripeClasses","orderClasses","selectOptions","id","name","criteria","createRef","handleChange","bind","res","get","map","d","selectedOption","getOptionById","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n//import DataTable from './DataTable'\nimport data from './data'\nimport Datalist from './Datalist'\nimport Select from 'react-select'\nimport axios from 'axios'\n\nexport default class App extends React.Component{\n\n    componentDidMount(){\n        console.log(\"component did mount\");\n        this.getOptions();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n            //   { title: \"name\", data: \"name\" },\n            //   { title: \"position\", data: \"position\" },\n            //   { title: \"salary\", data: \"salary\" },\n            //   { title: \"start_date\", data: \"start_date\" },\n            //   { title: \"office\", data: \"office\" },\n            //   { title: \"extn\", data: \"extn\" }\n            { title: \"userId\", data: \"userId\" },\n            { title: \"id\", data: \"id\" },\n            { title: \"title\", data: \"title\" },\n            { title: \"completed\", data: \"completed\" },\n\n            ],\n            searchValue: '',\n            options: {\n                dom: 'lBfrtip',\n                buttons: [\n                    'copy', 'csv', 'excel', 'pdf', 'print'\n                ], \n                stripeClasses: [ 'stripe1', 'stripe2' ],\n                orderClasses: false,\n\n\n                // paging: false,\n                // scrollX: true,\n                // scrollY: '100%',\n                // scrollCollapse: false,\n                // autoWidth: false,\n                // info: false,\n            },\n\n            selectOptions : [],\n            id: \"\",\n            name: '',\n            criteria:'',\n            //selected:false,\n        };\n        this.dataTableRef = React.createRef();\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    onChangeSearch = (e) => {\n        const { value } = e.target;\n        const searchValue = value;\n        this.setState({ searchValue });\n        this.dataTableRef.current.search(searchValue);\n    };\n\n    async getOptions(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/todos')\n        const data = res.data\n    \n        const options = data.map(d => ({\n          \"value\" : d.id,\n          \"label\" : d.title\n        }))\n        this.setState({selectOptions: options})\n      }\n\n      handleChange(selectedOption) {\n          console.log(\"press\");\n          console.log(selectedOption);\n          console.log(selectedOption.value);\n            //this.setState({clicked:true})\n            //this.setState({selectedVal:selectedOption.value})\n        //this.setState({criteria: selectedOption});\n        this.getOptionById(selectedOption.value);\n      }\n\n      async getOptionById(id){\n          console.log(id);\n        const res = await axios.get('https://jsonplaceholder.typicode.com/todos/'+id)\n        const data = res.data\n    \n        // const options = data.map(d => ({\n        //   \"value\" : d.id,\n        //   \"label\" : d.title\n        // }))\n        console.log(data.id);\n        console.log(data.title);\n        //this.setState({selectOptions: options})\n      }\n\n     \n\n    //   handleChange(selectedOption) {\n    //       console.log(\"press\");\n    //       console.log(selectedOption)\n    //     this.setState({criteria: selectedOption});\n    //   }\n\n    render() {\n\n        // if(this.state.selected==true){\n        //     const val =this.state.selectedVal\n        //     this.getOptionById(val);\n        // }\n\n        \n        const {\n            columns,\n            options,\n            searchValue\n        } = this.state;\n        return (\n          <div>\n              <Select options={this.state.selectOptions} onChange={this.handleChange} />\n           \n              <Datalist  dataTableRef={this.dataTableRef}\n                data={data}\n                columns={columns}\n                options={options}\n                \n                value={searchValue}\n                onChange={this.onChangeSearch}\n                />\n            {/* <input\n                value={searchValue}\n                onChange={this.onChangeSearch}\n                autoComplete={'off'}\n                type=\"text\"\n                placeholder=\"Search ...\"\n            />\n            <DataTable\n                ref={this.dataTableRef}\n                data={data}\n                columns={columns}\n                options={options}\n            /> */}\n          </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}