{"ast":null,"code":"import _slicedToArray from \"/Users/daveotengo/Desktop/git/react/react-datatables/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daveotengo/Desktop/git/react/react-datatables/src/Datalist.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Datalist(props) {\n  const _this$state = this.state,\n        columns = _this$state.columns,\n        options = _this$state.options,\n        searchValue = _this$state.searchValue;\n\n  function a() {\n    //super(props);\n    this.state = {\n      columns: [{\n        title: \"name\",\n        data: \"name\"\n      }, {\n        title: \"position\",\n        data: \"position\"\n      }, {\n        title: \"salary\",\n        data: \"salary\"\n      }, {\n        title: \"start_date\",\n        data: \"start_date\"\n      }, {\n        title: \"office\",\n        data: \"office\"\n      }, {\n        title: \"extn\",\n        data: \"extn\"\n      }],\n      searchValue: '',\n      options: {\n        dom: 'lrtip' // paging: false,\n        // scrollX: true,\n        // scrollY: '100%',\n        // scrollCollapse: false,\n        // autoWidth: false,\n        // info: false,\n\n      }\n    };\n    this.dataTableRef = React.createRef();\n  }\n\n  onChangeSearch = e => {\n    const value = e.target.value;\n    const searchValue = value;\n    this.setState({\n      searchValue\n    });\n    this.dataTableRef.current.search(searchValue);\n  };\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        userList = _useState2[0],\n        setUserList = _useState2[1];\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json).then(result => setUserList(result)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: searchValue,\n    onChange: this.onChangeSearch,\n    autoComplete: 'off',\n    type: \"text\",\n    placeholder: \"Search ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    ref: this.dataTableRef,\n    data: data,\n    columns: columns,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Datalist;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/react-datatables/src/Datalist.js"],"names":["React","useEffect","useState","Datalist","props","state","columns","options","searchValue","a","title","data","dom","dataTableRef","createRef","onChangeSearch","e","value","target","setState","current","search","userList","setUserList","fetch","then","response","json","result","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,sBAKjB,KAAKC,KALY;AAAA,QAEjBC,OAFiB,eAEjBA,OAFiB;AAAA,QAGjBC,OAHiB,eAGjBA,OAHiB;AAAA,QAIjBC,WAJiB,eAIjBA,WAJiB;;AAOjB,WAASC,CAAT,GAAc;AACd;AACA,SAAKJ,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CACP;AAAEI,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAFO,EAGP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAHO,EAIP;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,IAAI,EAAE;AAA7B,OAJO,EAKP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OALO,EAMP;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OANO,CADA;AASTH,MAAAA,WAAW,EAAE,EATJ;AAUTD,MAAAA,OAAO,EAAE;AACLK,QAAAA,GAAG,EAAE,OADA,CAEL;AACA;AACA;AACA;AACA;AACA;;AAPK;AAVA,KAAb;AAoBA,SAAKC,YAAL,GAAoBb,KAAK,CAACc,SAAN,EAApB;AACH;;AAEDC,EAAAA,cAAc,GAAIC,CAAD,IAAO;AAAA,UACZC,KADY,GACFD,CAAC,CAACE,MADA,CACZD,KADY;AAEpB,UAAMT,WAAW,GAAGS,KAApB;AACA,SAAKE,QAAL,CAAc;AAAEX,MAAAA;AAAF,KAAd;AACA,SAAKK,YAAL,CAAkBO,OAAlB,CAA0BC,MAA1B,CAAiCb,WAAjC;AACH,GALD;;AAhCqB,oBAuCQN,QAAQ,CAAC,EAAD,CAvChB;AAAA;AAAA,QAuCfoB,QAvCe;AAAA,QAuCNC,WAvCM;;AA0CrBtB,EAAAA,SAAS,CAAC,MAAI;AACVuB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAD1B,EAECF,IAFD,CAEMG,MAAM,IAAIL,WAAW,CAACK,MAAD,CAF3B,EAGCC,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHhB;AAIH,GALQ,EAKP,EALO,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AACK,IAAA,KAAK,EAAEtB,WADZ;AAEK,IAAA,QAAQ,EAAE,KAAKO,cAFpB;AAGK,IAAA,YAAY,EAAE,KAHnB;AAIK,IAAA,IAAI,EAAC,MAJV;AAKK,IAAA,WAAW,EAAC,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAQI,oBAAC,SAAD;AACI,IAAA,GAAG,EAAE,KAAKF,YADd;AAEI,IAAA,IAAI,EAAEF,IAFV;AAGI,IAAA,OAAO,EAAEL,OAHb;AAII,IAAA,OAAO,EAAEC,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAiBH;;AAED,eAAeJ,QAAf","sourcesContent":["import React, {useEffect,useState} from 'react';\n\nfunction Datalist(props) {\n    const {\n        columns,\n        options,\n        searchValue\n    } = this.state;\n\n        function a () {\n        //super(props);\n        this.state = {\n            columns: [\n              { title: \"name\", data: \"name\" },\n              { title: \"position\", data: \"position\" },\n              { title: \"salary\", data: \"salary\" },\n              { title: \"start_date\", data: \"start_date\" },\n              { title: \"office\", data: \"office\" },\n              { title: \"extn\", data: \"extn\" }\n            ],\n            searchValue: '',\n            options: {\n                dom: 'lrtip',\n                // paging: false,\n                // scrollX: true,\n                // scrollY: '100%',\n                // scrollCollapse: false,\n                // autoWidth: false,\n                // info: false,\n            }\n        };\n        this.dataTableRef = React.createRef();\n    }\n\n    onChangeSearch = (e) => {\n        const { value } = e.target;\n        const searchValue = value;\n        this.setState({ searchValue });\n        this.dataTableRef.current.search(searchValue);\n    };\n\n    const[userList,setUserList]= useState([]);\n\n    \n    useEffect(()=>{\n        fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(response=> response.json)\n        .then(result => setUserList(result) )\n        .catch(error => console.log(error))\n    },[])\n\n    return (\n        <div>\n           <input\n                value={searchValue}\n                onChange={this.onChangeSearch}\n                autoComplete={'off'}\n                type=\"text\"\n                placeholder=\"Search ...\"\n            />\n            <DataTable\n                ref={this.dataTableRef}\n                data={data}\n                columns={columns}\n                options={options}\n            />\n        </div>\n    );\n}\n\nexport default Datalist;"]},"metadata":{},"sourceType":"module"}